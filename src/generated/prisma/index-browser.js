
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  full_name: 'full_name',
  role: 'role',
  password_hash: 'password_hash',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MenteeScalarFieldEnum = {
  user_id: 'user_id',
  short_goal: 'short_goal',
  target_track: 'target_track',
  budget: 'budget',
  time_preference: 'time_preference',
  city: 'city',
  country: 'country',
  goal_type: 'goal_type',
  service_focus: 'service_focus',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MentorScalarFieldEnum = {
  user_id: 'user_id',
  mentor_type: 'mentor_type',
  display_name: 'display_name',
  title: 'title',
  years_experience: 'years_experience',
  hourly_rate_cents: 'hourly_rate_cents',
  meeting_preference: 'meeting_preference',
  bio_short: 'bio_short',
  bio_long: 'bio_long',
  city: 'city',
  country: 'country',
  rating_avg: 'rating_avg',
  total_reviews: 'total_reviews',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ServiceFocusRefScalarFieldEnum = {
  id: 'id',
  label: 'label',
  active: 'active',
  sort_order: 'sort_order'
};

exports.Prisma.LanguageRefScalarFieldEnum = {
  id: 'id',
  label: 'label',
  active: 'active',
  sort_order: 'sort_order'
};

exports.Prisma.DisciplineRefScalarFieldEnum = {
  id: 'id',
  label: 'label',
  active: 'active',
  sort_order: 'sort_order'
};

exports.Prisma.PreferenceRefScalarFieldEnum = {
  id: 'id',
  label: 'label',
  active: 'active',
  sort_order: 'sort_order'
};

exports.Prisma.MenteeLanguageScalarFieldEnum = {
  user_id: 'user_id',
  lang_code: 'lang_code'
};

exports.Prisma.MenteeInterestScalarFieldEnum = {
  user_id: 'user_id',
  interest: 'interest',
  created_at: 'created_at'
};

exports.Prisma.MenteePriorityScalarFieldEnum = {
  user_id: 'user_id',
  priority: 'priority',
  created_at: 'created_at'
};

exports.Prisma.MentorLanguageScalarFieldEnum = {
  user_id: 'user_id',
  lang_code: 'lang_code'
};

exports.Prisma.MentorCategoryScalarFieldEnum = {
  user_id: 'user_id',
  category: 'category'
};

exports.Prisma.MentorSkillScalarFieldEnum = {
  user_id: 'user_id',
  skill: 'skill'
};

exports.Prisma.MenteeServiceFocusScalarFieldEnum = {
  user_id: 'user_id',
  service_focus_id: 'service_focus_id'
};

exports.Prisma.MenteeLanguageRefScalarFieldEnum = {
  user_id: 'user_id',
  language_id: 'language_id'
};

exports.Prisma.MenteeDisciplineRefScalarFieldEnum = {
  user_id: 'user_id',
  discipline_id: 'discipline_id'
};

exports.Prisma.MenteePreferenceRefScalarFieldEnum = {
  user_id: 'user_id',
  preference_id: 'preference_id'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  website: 'website',
  tax_id: 'tax_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MentorCompanyMembershipScalarFieldEnum = {
  mentor_id: 'mentor_id',
  company_id: 'company_id',
  role_title: 'role_title',
  work_email: 'work_email',
  created_at: 'created_at'
};

exports.Prisma.UserConsentScalarFieldEnum = {
  user_id: 'user_id',
  kvkk_accepted_at: 'kvkk_accepted_at',
  kvkk_version: 'kvkk_version',
  ip_address: 'ip_address',
  marketing_opt_in: 'marketing_opt_in',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  mentee: 'mentee',
  mentor: 'mentor',
  admin: 'admin'
};

exports.MentorType = exports.$Enums.MentorType = {
  individual: 'individual',
  corporate: 'corporate'
};

exports.MentorStatus = exports.$Enums.MentorStatus = {
  pending_verification: 'pending_verification',
  verified: 'verified',
  suspended: 'suspended'
};

exports.Prisma.ModelName = {
  User: 'User',
  Mentee: 'Mentee',
  Mentor: 'Mentor',
  ServiceFocusRef: 'ServiceFocusRef',
  LanguageRef: 'LanguageRef',
  DisciplineRef: 'DisciplineRef',
  PreferenceRef: 'PreferenceRef',
  MenteeLanguage: 'MenteeLanguage',
  MenteeInterest: 'MenteeInterest',
  MenteePriority: 'MenteePriority',
  MentorLanguage: 'MentorLanguage',
  MentorCategory: 'MentorCategory',
  MentorSkill: 'MentorSkill',
  MenteeServiceFocus: 'MenteeServiceFocus',
  MenteeLanguageRef: 'MenteeLanguageRef',
  MenteeDisciplineRef: 'MenteeDisciplineRef',
  MenteePreferenceRef: 'MenteePreferenceRef',
  Company: 'Company',
  MentorCompanyMembership: 'MentorCompanyMembership',
  UserConsent: 'UserConsent'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
